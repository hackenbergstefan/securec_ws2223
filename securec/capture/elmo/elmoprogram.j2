#include <stddef.h>
#include <stdint.h>
#include <string.h>
#include "elmoasmfunctionsdef.h"

#define NUMBER_OF_TRACES {{ number_of_traces }}

uint8_t elmo_input[{{ input_length }}];

void setup(uint8_t *input_data);
void run(uint8_t *input_data);
void teardown(void);

void read_input(uint8_t *buffer, size_t length);
void print_buffer(uint8_t *buffer, size_t length);

void read_input(uint8_t *buffer, size_t length)
{
    for (size_t i = 0; i < length; i++)
    {
        readbyte(&buffer[i]);
    }
}

void print_buffer(uint8_t *buffer, size_t length)
{
    for (size_t i = 0; i < length; i++)
    {
        printbyte(&buffer[i]);
    }
}

int main(void)
{
    for (uint_fast32_t i = 0; i < NUMBER_OF_TRACES; i++)
    {
        memset(elmo_input, 0, sizeof(elmo_input));
        read_input(elmo_input, sizeof(elmo_input));

{% if fromfile %}
        setup(elmo_input);
{% endif %}

        starttrigger();

{% if fromfile %}
        run(elmo_input);
{% else %}
        {{ code }}
{% endif %}

        endtrigger();

{% if fromfile %}
        teardown();
{% endif %}
    }

    endprogram();
}

{% if fromfile %}
#include "{{ fromfile }}"
{% endif %}
